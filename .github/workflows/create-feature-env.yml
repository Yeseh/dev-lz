name: Create Feature Environment
on: 
    push:
        branches:
            - feat/*

permissions:
  id-token: write
  contents: read

env:
    DEVCENTER: dc-devlz
    CATALOG: Catalog-devlz
    PROJECT: project-devlz
    RG: rg-devlz
    ENVDEF: dotnet-function-app
    ENVTYPE: dev

jobs:
    create-feature-environment:
        runs-on: ubuntu-latest
        environment: dev
        steps:
        - name: 'Az Cli Login'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID}}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: 'Install DevCenter extension'
          run: az extension add --name devcenter

        - name: Set Branch Name 
          id: vars
          run: echo "branch=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

        - name: Check Branch Name 
          run: echo ${{ steps.vars.outputs.branch }}
        
        - name: 'Create feature environment if not exists'
          shell: pwsh
          run: |
            $branch = '${{ steps.vars.outputs.branch }}'
            $envName = $branch.Replace("/", "_").Replace("-", "")
            $slug = $envName.Replace("feature-", "")
            $data = @{"slug" = "$slug" } | ConvertTo-Json -Depth 2
            $params = $data.replace('"', '""').replace("`n", '')
            $params
            $existing = $(az devcenter dev environment show --dev-center dc-devlz --project project-devlz --name $envName | ConvertFrom-Json)
            if ($null -eq $existing) {
                Write-Host "Environment for branch $branch not found, creating..."
                az devcenter dev environment create --catalog-name '${{ env.CATALOG }}' --environment-type '${{ env.ENVTYPE }}' --parameters "$params" --dev-center '${{ env.DEVCENTER }}' --project '${{ env.PROJECT }}' --environment-definition-name '${{ env.ENVDEF }}' --name "$envName"
            } else {
                Write-Host "Environment for branch $branch already exists..."
            }
