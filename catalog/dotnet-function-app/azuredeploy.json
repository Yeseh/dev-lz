{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "1.10-experimental",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "8988716848221144945"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev"
    },
    "slug": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": {
    "law": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "lawdevlzdemo1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "slug": {
            "value": "[parameters('slug')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "9249548172519935533"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure resource location."
              }
            },
            "slug": {
              "type": "string"
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment this module is deployed to."
              },
              "allowedValues": [
                "",
                "dev",
                "test",
                "acc",
                "prod"
              ]
            }
          },
          "variables": {
            "lawsName": "[if(empty(parameters('environment')), format('laws-{0}', parameters('slug')), format('laws-{0}-{1}', parameters('slug'), parameters('environment')))]"
          },
          "resources": {
            "logAnalyticsWorkspace": {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[variables('lawsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 0,
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": false
                }
              }
            }
          },
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('lawsName'))]"
            },
            "workspaceName": {
              "type": "string",
              "value": "[variables('lawsName')]"
            }
          }
        }
      }
    },
    "kv": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "kvdevlzdemo1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environment": {
            "value": "[parameters('environment')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "slug": {
            "value": "[parameters('slug')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('law').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "17868888039603934979"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure resource location."
              }
            },
            "slug": {
              "type": "string",
              "metadata": {
                "description": "Small identifier for the project, used to build resource names."
              },
              "maxLength": 10
            },
            "environment": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The environment this module is deployed to."
              },
              "allowedValues": [
                "",
                "dev",
                "test",
                "acc",
                "prod"
              ]
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "The Log Analytics Workspace ID to send keyvault logs to."
              }
            },
            "whitelistIps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The IP addresses that are allowed to communicate with the Key Vault."
              }
            },
            "subnetIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "List of subnet IDs that are allowed to access the keyvault."
              }
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The ID of the subnet to place the KV private endpoint in. If empty, no private endpoint will be created."
              }
            },
            "privateDnsZoneId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The ID of the private DNS zone."
              }
            },
            "allowPublicAccess": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "kvIpRules": "[map(range(0, length(parameters('whitelistIps'))), lambda('i', createObject('value', format('{0}', parameters('whitelistIps')[lambdaVariables('i')]))))]",
            "kvSubnetRules": "[map(range(0, length(parameters('subnetIds'))), lambda('i', createObject('id', format('{0}', parameters('subnetIds')[lambdaVariables('i')]))))]",
            "kvName": "[if(empty(parameters('environment')), format('kv-{0}', parameters('slug')), format('kv-{0}-{1}', parameters('slug'), parameters('environment')))]",
            "privateEndpointName": "[format('pep-{0}', variables('kvName'))]"
          },
          "resources": {
            "keyVault": {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[variables('kvName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableRbacAuthorization": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "[if(parameters('allowPublicAccess'), 'Allow', 'Deny')]",
                  "virtualNetworkRules": "[variables('kvSubnetRules')]",
                  "ipRules": "[variables('kvIpRules')]"
                },
                "enablePurgeProtection": true,
                "softDeleteRetentionInDays": 7,
                "enableSoftDelete": true
              }
            },
            "keyVaultDiag": {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('kvName'))]",
              "name": "keyVaultDiagnosticSettings",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  },
                  {
                    "categoryGroup": "audit",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "keyVaultPep": {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-05-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "keyVault"
              ]
            },
            "keyvaultPdnsZoneGroup": {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', variables('privateEndpointName'), 'kvPrivateDns')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "vault",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "keyVaultPep"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "value": "[variables('kvName')]"
            },
            "vaultUri": {
              "type": "string",
              "value": "[reference('keyVault').vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "law"
      ]
    },
    "sa": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sadevlzdemo1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerNames": {
            "value": [
              "dev"
            ]
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "keyVaultName": {
            "value": "[reference('kv').outputs.name.value]"
          },
          "keyVaultResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceId": {
            "value": "[reference('law').outputs.workspaceId.value]"
          },
          "slug": {
            "value": "[parameters('slug')]"
          },
          "whitelistIps": {
            "value": []
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "1.10-experimental",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "4721173615582677338"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The Azure resource location."
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "The environment this module is deployed to."
              },
              "allowedValues": [
                "",
                "dev",
                "test",
                "acc",
                "prod"
              ]
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "The ID of the Log Analytics Workspace, to send diagnostics to."
              }
            },
            "whitelistIps": {
              "type": "array",
              "metadata": {
                "description": "The IP addresses allowed to access this storage account."
              }
            },
            "slug": {
              "type": "string",
              "metadata": {
                "description": "Small identifier for the project, used to build resource names."
              }
            },
            "containerNames": {
              "type": "array",
              "metadata": {
                "description": "An array of containers that need to be created."
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The Key Vault name where the storage account access key will be stored."
              }
            },
            "keyVaultResourceGroup": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the Key Vault is in."
              }
            },
            "subnetIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "The IDs of the subnets this storage account is connected to."
              }
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The ID of the subnet to place the KV private endpoint in. If empty, no private endpoint will be created."
              }
            },
            "privateDnsZoneId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The ID of the DNS zone used for blob services."
              }
            }
          },
          "variables": {
            "saIpRules": "[map(range(0, length(parameters('whitelistIps'))), lambda('i', createObject('action', 'Allow', 'value', parameters('whitelistIps')[lambdaVariables('i')])))]",
            "saSubnetRules": "[map(range(0, length(parameters('subnetIds'))), lambda('i', createObject('id', parameters('subnetIds')[lambdaVariables('i')])))]",
            "isTestEnvironment": "[or(equals(parameters('environment'), 'test'), equals(parameters('environment'), 'dev'))]",
            "storageAccountName": "[toLower(if(empty(parameters('environment')), format('sa{0}', parameters('slug')), format('sa{0}{1}', parameters('slug'), parameters('environment'))))]",
            "privateEndpointName": "[format('pep-{0}', variables('storageAccountName'))]",
            "secretName": "[format('{0}-access-key', variables('storageAccountName'))]",
            "deleteRetentionDays": "[if(variables('isTestEnvironment'), 7, 30)]",
            "restorePolicyDays": "[if(variables('isTestEnvironment'), 6, 29)]"
          },
          "resources": {
            "saPep::saPdnszoneGroup": {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', variables('privateEndpointName'), format('pdnsZoneGroup-{0}', variables('storageAccountName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "blob",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "saPep",
                "storageaccount"
              ]
            },
            "storageaccount": {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "accessTier": "Cool",
                "minimumTlsVersion": "TLS1_2",
                "allowedCopyScope": "AAD",
                "largeFileSharesState": "Disabled",
                "supportsHttpsTrafficOnly": true,
                "defaultToOAuthAuthentication": true,
                "allowSharedKeyAccess": true,
                "allowBlobPublicAccess": false,
                "isNfsV3Enabled": false,
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "networkAcls": {
                  "defaultAction": "Deny",
                  "ipRules": "[variables('saIpRules')]",
                  "virtualNetworkRules": "[variables('saSubnetRules')]"
                }
              }
            },
            "blobService": {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "properties": {
                "isVersioningEnabled": true,
                "changeFeed": {
                  "enabled": true,
                  "retentionInDays": "[if(variables('isTestEnvironment'), 7, null())]"
                },
                "containerDeleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": true,
                  "days": "[variables('deleteRetentionDays')]"
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": true,
                  "days": "[variables('deleteRetentionDays')]"
                },
                "restorePolicy": {
                  "enabled": true,
                  "days": "[variables('restorePolicyDays')]"
                }
              },
              "dependsOn": [
                "storageaccount"
              ]
            },
            "blobContainer": {
              "copy": {
                "name": "blobContainer",
                "count": "[length(parameters('containerNames'))]"
              },
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('containerNames')[copyIndex()])]",
              "properties": {
                "immutableStorageWithVersioning": {
                  "enabled": false
                },
                "publicAccess": "None"
              },
              "dependsOn": [
                "blobService"
              ]
            },
            "blobserviceDiag": {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', variables('storageAccountName'), 'default')]",
              "name": "blobServiceDiag",
              "properties": {
                "logs": [
                  {
                    "category": "StorageRead",
                    "enabled": true
                  },
                  {
                    "category": "StorageWrite",
                    "enabled": true
                  },
                  {
                    "category": "StorageDelete",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "blobService"
              ]
            },
            "storageaccountDiag": {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
              "name": "storageaccountDiag",
              "properties": {
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
              },
              "dependsOn": [
                "storageaccount"
              ]
            },
            "saPep": {
              "condition": "[not(empty(parameters('privateEndpointSubnetId')))]",
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-05-01",
              "name": "[variables('privateEndpointName')]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('privateEndpointName')]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "blobService",
                "storageaccount"
              ]
            },
            "keyVaultSecret": {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('secretName')]",
              "resourceGroup": "[parameters('keyVaultResourceGroup')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "secretName": {
                    "value": "[variables('secretName')]"
                  },
                  "secretValue": {
                    "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "languageVersion": "1.10-experimental",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_EXPERIMENTAL_WARNING": "Symbolic name support in ARM is experimental, and should be enabled for testing purposes only. Do not enable this setting for any production usage, or you may be unexpectedly broken at any time!",
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "8685881587734095567"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Key Vault in which this secret should be stored."
                      }
                    },
                    "secretName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the secret."
                      }
                    },
                    "secretValue": {
                      "type": "securestring",
                      "metadata": {
                        "description": "The value of the secret."
                      }
                    }
                  },
                  "resources": {
                    "keyVault": {
                      "existing": true,
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-07-01",
                      "name": "[parameters('keyVaultName')]"
                    },
                    "secret": {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secretName'))]",
                      "properties": {
                        "value": "[parameters('secretValue')]"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "storageaccount"
              ]
            }
          },
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            },
            "storageAccountName": {
              "type": "string",
              "value": "[variables('storageAccountName')]"
            }
          }
        }
      },
      "dependsOn": [
        "kv",
        "law"
      ]
    }
  }
}